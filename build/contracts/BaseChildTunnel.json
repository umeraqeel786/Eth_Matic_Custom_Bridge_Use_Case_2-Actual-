{
  "contractName": "BaseChildTunnel",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_SYNCER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "onStateReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_SYNCER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"onStateReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"onStateReceive(uint256,bytes)\":{\"details\":\"This method will be called by Matic chain internally. This is executed without transaction using a system call.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"}}},\"userdoc\":{\"methods\":{\"onStateReceive(uint256,bytes)\":{\"notice\":\"Receive state sync from matic contracts\"}},\"notice\":\"Mock child tunnel contract to receive and send message from L2\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tunnel/BaseChildTunnel.sol\":\"BaseChildTunnel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"project:/contracts/common/AccessControlMixin.sol\":{\"keccak256\":\"0x72b4f96b8c483ab0b2d6d4aed2c2c432cd65fa0fa4a1f7d441c74ddfd855376d\",\"urls\":[\"bzz-raw://0b990bffe9a41e3a2fb126fb12b05751757a31e34c4527579756deb8d4f88eeb\",\"dweb:/ipfs/QmcaR3PNeGDr1hkhEXxrvyjaUhBLLyTBs2f6kFrMLSAxmZ\"]},\"project:/contracts/tunnel/BaseChildTunnel.sol\":{\"keccak256\":\"0x0da240f2cddfcc3cc5fbff09c1976f8d4ec59457a80690c51b838a089c0f9175\",\"urls\":[\"bzz-raw://f8582fee05257a3f584e6b6bb5c017e902b849fff8ea5d5052cbe95997e5de67\",\"dweb:/ipfs/QmdDtGmrkq92464x8GKiFD3jK6926g51jDmytZqBLWdKQT\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.6.6;\n\n\nimport {AccessControlMixin} from \"../common/AccessControlMixin.sol\";\n\n/**\n* @notice Mock child tunnel contract to receive and send message from L2\n*/\nabstract contract BaseChildTunnel is AccessControlMixin {\n    bytes32 public constant STATE_SYNCER_ROLE = keccak256(\"STATE_SYNCER_ROLE\");\n\n    // MessageTunnel on L1 will get data from this event\n    event MessageSent(bytes message);\n\n    constructor() internal {\n      _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n      _setupRole(STATE_SYNCER_ROLE, 0x0000000000000000000000000000000000001001);\n      _setupContractId(\"ChildTunnel\");\n    }\n\n    /**\n     * @notice Receive state sync from matic contracts\n     * @dev This method will be called by Matic chain internally.\n     * This is executed without transaction using a system call.\n     */\n    function onStateReceive(uint256, bytes memory message) public only(STATE_SYNCER_ROLE) {\n        _processMessageFromRoot(message);\n    }\n\n    /**\n     * @notice Emit message that can be received on Root Tunnel\n     * @dev Call the internal function when need to emit message\n     * @param message bytes message that will be sent to Root Tunnel\n     * some message examples -\n     *   abi.encode(tokenId);\n     *   abi.encode(tokenId, tokenMetadata);\n     *   abi.encode(messageType, messageData);\n     */\n    function _sendMessageToRoot(bytes memory message) internal {\n        emit MessageSent(message);\n    }\n\n    /**\n     * @notice Process message received from Root Tunnel\n     * @dev function needs to be implemented to handle message as per requirement\n     * This is called by onStateReceive function.\n     * Since it is called via a system call, any event will not be emitted during its execution.\n     * @param message bytes message that was sent from Root Tunnel\n     */\n    function _processMessageFromRoot(bytes memory message) virtual internal;\n}\n",
  "sourcePath": "/home/moiz/NETSOl/Task-25, Bridge between polygon and ethereum (erc-20) Use-case 2/Ethereum_Polygon_Custom_Bridge_ERC20_Contracts_on_Testnet_without_status_Checks_Use_case_2/contracts/tunnel/BaseChildTunnel.sol",
  "ast": {
    "absolutePath": "project:/contracts/tunnel/BaseChildTunnel.sol",
    "exportedSymbols": {
      "BaseChildTunnel": [
        8078
      ]
    },
    "id": 8079,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8011,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:59"
      },
      {
        "absolutePath": "project:/contracts/common/AccessControlMixin.sol",
        "file": "../common/AccessControlMixin.sol",
        "id": 8013,
        "nodeType": "ImportDirective",
        "scope": 8079,
        "sourceUnit": 3552,
        "src": "25:68:59",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8012,
              "name": "AccessControlMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "33:18:59",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8015,
              "name": "AccessControlMixin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3551,
              "src": "212:18:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControlMixin_$3551",
                "typeString": "contract AccessControlMixin"
              }
            },
            "id": 8016,
            "nodeType": "InheritanceSpecifier",
            "src": "212:18:59"
          }
        ],
        "contractDependencies": [
          22,
          305,
          3551
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8014,
          "nodeType": "StructuredDocumentation",
          "src": "95:79:59",
          "text": "@notice Mock child tunnel contract to receive and send message from L2"
        },
        "fullyImplemented": false,
        "id": 8078,
        "linearizedBaseContracts": [
          8078,
          3551,
          305,
          22
        ],
        "name": "BaseChildTunnel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "4dee4498",
            "id": 8021,
            "mutability": "constant",
            "name": "STATE_SYNCER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 8078,
            "src": "237:74:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8017,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "53544154455f53594e4345525f524f4c45",
                  "id": 8019,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "291:19:59",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b737cb9002cff05f414da9df8b1cdaf43b188015b1b4ac404e2200119cd5b5c8",
                    "typeString": "literal_string \"STATE_SYNCER_ROLE\""
                  },
                  "value": "STATE_SYNCER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b737cb9002cff05f414da9df8b1cdaf43b188015b1b4ac404e2200119cd5b5c8",
                    "typeString": "literal_string \"STATE_SYNCER_ROLE\""
                  }
                ],
                "id": 8018,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "281:9:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8020,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "281:30:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 8025,
            "name": "MessageSent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8023,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8025,
                  "src": "393:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8022,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:15:59"
            },
            "src": "375:33:59"
          },
          {
            "body": {
              "id": 8043,
              "nodeType": "Block",
              "src": "437:177:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8029,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "456:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "476:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "476:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8028,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "445:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 8032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:42:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8033,
                  "nodeType": "ExpressionStatement",
                  "src": "445:42:59"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8035,
                        "name": "STATE_SYNCER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "506:17:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303031303031",
                        "id": 8036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "525:42:59",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x0000000000000000000000000000000000001001"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8034,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "495:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 8037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:73:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8038,
                  "nodeType": "ExpressionStatement",
                  "src": "495:73:59"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4368696c6454756e6e656c",
                        "id": 8040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:13:59",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97acd18655573bb2613e9e65a2b3c1ba68c5d10f259e62cf94f470efb3d14fc6",
                          "typeString": "literal_string \"ChildTunnel\""
                        },
                        "value": "ChildTunnel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97acd18655573bb2613e9e65a2b3c1ba68c5d10f259e62cf94f470efb3d14fc6",
                          "typeString": "literal_string \"ChildTunnel\""
                        }
                      ],
                      "id": 8039,
                      "name": "_setupContractId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3535,
                      "src": "576:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 8041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "576:31:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8042,
                  "nodeType": "ExpressionStatement",
                  "src": "576:31:59"
                }
              ]
            },
            "documentation": null,
            "id": 8044,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:2:59"
            },
            "returnParameters": {
              "id": 8027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:59"
            },
            "scope": 8078,
            "src": "414:200:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8059,
              "nodeType": "Block",
              "src": "908:49:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8056,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8049,
                        "src": "942:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8055,
                      "name": "_processMessageFromRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8077,
                      "src": "918:23:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 8057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:32:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8058,
                  "nodeType": "ExpressionStatement",
                  "src": "918:32:59"
                }
              ]
            },
            "documentation": {
              "id": 8045,
              "nodeType": "StructuredDocumentation",
              "src": "620:197:59",
              "text": "@notice Receive state sync from matic contracts\n@dev This method will be called by Matic chain internally.\nThis is executed without transaction using a system call."
            },
            "functionSelector": "26c53bea",
            "id": 8060,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8052,
                    "name": "STATE_SYNCER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8021,
                    "src": "889:17:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8053,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8051,
                  "name": "only",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3550,
                  "src": "884:4:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "884:23:59"
              }
            ],
            "name": "onStateReceive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8047,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8060,
                  "src": "846:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8060,
                  "src": "855:20:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "845:31:59"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:59"
            },
            "scope": 8078,
            "src": "822:135:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8070,
              "nodeType": "Block",
              "src": "1389:42:59",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8067,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8063,
                        "src": "1416:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8066,
                      "name": "MessageSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8025,
                      "src": "1404:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 8068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:20:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8069,
                  "nodeType": "EmitStatement",
                  "src": "1399:25:59"
                }
              ]
            },
            "documentation": {
              "id": 8061,
              "nodeType": "StructuredDocumentation",
              "src": "963:362:59",
              "text": "@notice Emit message that can be received on Root Tunnel\n@dev Call the internal function when need to emit message\n@param message bytes message that will be sent to Root Tunnel\nsome message examples -\n  abi.encode(tokenId);\n  abi.encode(tokenId, tokenMetadata);\n  abi.encode(messageType, messageData);"
            },
            "id": 8071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendMessageToRoot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8063,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8071,
                  "src": "1358:20:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1357:22:59"
            },
            "returnParameters": {
              "id": 8065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1389:0:59"
            },
            "scope": 8078,
            "src": "1330:101:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": {
              "id": 8072,
              "nodeType": "StructuredDocumentation",
              "src": "1437:364:59",
              "text": "@notice Process message received from Root Tunnel\n@dev function needs to be implemented to handle message as per requirement\nThis is called by onStateReceive function.\nSince it is called via a system call, any event will not be emitted during its execution.\n@param message bytes message that was sent from Root Tunnel"
            },
            "id": 8077,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_processMessageFromRoot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8074,
                  "mutability": "mutable",
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8077,
                  "src": "1839:20:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1838:22:59"
            },
            "returnParameters": {
              "id": 8076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:59"
            },
            "scope": 8078,
            "src": "1806:72:59",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8079,
        "src": "175:1705:59"
      }
    ],
    "src": "0:1881:59"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/tunnel/BaseChildTunnel.sol",
      "exportedSymbols": {
        "BaseChildTunnel": [
          8078
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".6"
          ]
        },
        "id": 8011,
        "name": "PragmaDirective",
        "src": "0:22:59"
      },
      {
        "attributes": {
          "SourceUnit": 3552,
          "absolutePath": "project:/contracts/common/AccessControlMixin.sol",
          "file": "../common/AccessControlMixin.sol",
          "scope": 8079,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "argumentTypes": null,
                  "overloadedDeclarations": [
                    null
                  ],
                  "referencedDeclaration": null,
                  "type": null,
                  "value": "AccessControlMixin"
                },
                "id": 8012,
                "name": "Identifier",
                "src": "33:18:59"
              },
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 8013,
        "name": "ImportDirective",
        "src": "25:68:59"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            22,
            305,
            3551
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            8078,
            3551,
            305,
            22
          ],
          "name": "BaseChildTunnel",
          "scope": 8079
        },
        "children": [
          {
            "attributes": {
              "text": "@notice Mock child tunnel contract to receive and send message from L2"
            },
            "id": 8014,
            "name": "StructuredDocumentation",
            "src": "95:79:59"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "AccessControlMixin",
                  "referencedDeclaration": 3551,
                  "type": "contract AccessControlMixin"
                },
                "id": 8015,
                "name": "UserDefinedTypeName",
                "src": "212:18:59"
              }
            ],
            "id": 8016,
            "name": "InheritanceSpecifier",
            "src": "212:18:59"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "4dee4498",
              "mutability": "constant",
              "name": "STATE_SYNCER_ROLE",
              "overrides": null,
              "scope": 8078,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 8017,
                "name": "ElementaryTypeName",
                "src": "237:7:59"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b737cb9002cff05f414da9df8b1cdaf43b188015b1b4ac404e2200119cd5b5c8",
                          "typeString": "literal_string \"STATE_SYNCER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 8018,
                    "name": "Identifier",
                    "src": "281:9:59"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "53544154455f53594e4345525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"STATE_SYNCER_ROLE\"",
                      "value": "STATE_SYNCER_ROLE"
                    },
                    "id": 8019,
                    "name": "Literal",
                    "src": "291:19:59"
                  }
                ],
                "id": 8020,
                "name": "FunctionCall",
                "src": "281:30:59"
              }
            ],
            "id": 8021,
            "name": "VariableDeclaration",
            "src": "237:74:59"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "MessageSent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 8025,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8022,
                        "name": "ElementaryTypeName",
                        "src": "393:5:59"
                      }
                    ],
                    "id": 8023,
                    "name": "VariableDeclaration",
                    "src": "393:13:59"
                  }
                ],
                "id": 8024,
                "name": "ParameterList",
                "src": "392:15:59"
              }
            ],
            "id": 8025,
            "name": "EventDefinition",
            "src": "375:33:59"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "overrides": null,
              "scope": 8078,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8026,
                "name": "ParameterList",
                "src": "425:2:59"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8027,
                "name": "ParameterList",
                "src": "437:0:59"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 231,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 8028,
                            "name": "Identifier",
                            "src": "445:10:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 48,
                              "type": "bytes32",
                              "value": "DEFAULT_ADMIN_ROLE"
                            },
                            "id": 8029,
                            "name": "Identifier",
                            "src": "456:18:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 8030,
                                "name": "Identifier",
                                "src": "476:3:59"
                              }
                            ],
                            "id": 8031,
                            "name": "MemberAccess",
                            "src": "476:10:59"
                          }
                        ],
                        "id": 8032,
                        "name": "FunctionCall",
                        "src": "445:42:59"
                      }
                    ],
                    "id": 8033,
                    "name": "ExpressionStatement",
                    "src": "445:42:59"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 231,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 8034,
                            "name": "Identifier",
                            "src": "495:10:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8021,
                              "type": "bytes32",
                              "value": "STATE_SYNCER_ROLE"
                            },
                            "id": 8035,
                            "name": "Identifier",
                            "src": "506:17:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "307830303030303030303030303030303030303030303030303030303030303030303030303031303031",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "address payable",
                              "value": "0x0000000000000000000000000000000000001001"
                            },
                            "id": 8036,
                            "name": "Literal",
                            "src": "525:42:59"
                          }
                        ],
                        "id": 8037,
                        "name": "FunctionCall",
                        "src": "495:73:59"
                      }
                    ],
                    "id": 8038,
                    "name": "ExpressionStatement",
                    "src": "495:73:59"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_97acd18655573bb2613e9e65a2b3c1ba68c5d10f259e62cf94f470efb3d14fc6",
                                  "typeString": "literal_string \"ChildTunnel\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3535,
                              "type": "function (string memory)",
                              "value": "_setupContractId"
                            },
                            "id": 8039,
                            "name": "Identifier",
                            "src": "576:16:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4368696c6454756e6e656c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ChildTunnel\"",
                              "value": "ChildTunnel"
                            },
                            "id": 8040,
                            "name": "Literal",
                            "src": "593:13:59"
                          }
                        ],
                        "id": 8041,
                        "name": "FunctionCall",
                        "src": "576:31:59"
                      }
                    ],
                    "id": 8042,
                    "name": "ExpressionStatement",
                    "src": "576:31:59"
                  }
                ],
                "id": 8043,
                "name": "Block",
                "src": "437:177:59"
              }
            ],
            "id": 8044,
            "name": "FunctionDefinition",
            "src": "414:200:59"
          },
          {
            "attributes": {
              "functionSelector": "26c53bea",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "onStateReceive",
              "overrides": null,
              "scope": 8078,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Receive state sync from matic contracts\n@dev This method will be called by Matic chain internally.\nThis is executed without transaction using a system call."
                },
                "id": 8045,
                "name": "StructuredDocumentation",
                "src": "620:197:59"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 8060,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 8046,
                        "name": "ElementaryTypeName",
                        "src": "846:7:59"
                      }
                    ],
                    "id": 8047,
                    "name": "VariableDeclaration",
                    "src": "846:7:59"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 8060,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8048,
                        "name": "ElementaryTypeName",
                        "src": "855:5:59"
                      }
                    ],
                    "id": 8049,
                    "name": "VariableDeclaration",
                    "src": "855:20:59"
                  }
                ],
                "id": 8050,
                "name": "ParameterList",
                "src": "845:31:59"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8054,
                "name": "ParameterList",
                "src": "908:0:59"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3550,
                      "type": "modifier (bytes32)",
                      "value": "only"
                    },
                    "id": 8051,
                    "name": "Identifier",
                    "src": "884:4:59"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8021,
                      "type": "bytes32",
                      "value": "STATE_SYNCER_ROLE"
                    },
                    "id": 8052,
                    "name": "Identifier",
                    "src": "889:17:59"
                  }
                ],
                "id": 8053,
                "name": "ModifierInvocation",
                "src": "884:23:59"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8077,
                              "type": "function (bytes memory)",
                              "value": "_processMessageFromRoot"
                            },
                            "id": 8055,
                            "name": "Identifier",
                            "src": "918:23:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8049,
                              "type": "bytes memory",
                              "value": "message"
                            },
                            "id": 8056,
                            "name": "Identifier",
                            "src": "942:7:59"
                          }
                        ],
                        "id": 8057,
                        "name": "FunctionCall",
                        "src": "918:32:59"
                      }
                    ],
                    "id": 8058,
                    "name": "ExpressionStatement",
                    "src": "918:32:59"
                  }
                ],
                "id": 8059,
                "name": "Block",
                "src": "908:49:59"
              }
            ],
            "id": 8060,
            "name": "FunctionDefinition",
            "src": "822:135:59"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_sendMessageToRoot",
              "overrides": null,
              "scope": 8078,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emit message that can be received on Root Tunnel\n@dev Call the internal function when need to emit message\n@param message bytes message that will be sent to Root Tunnel\nsome message examples -\n  abi.encode(tokenId);\n  abi.encode(tokenId, tokenMetadata);\n  abi.encode(messageType, messageData);"
                },
                "id": 8061,
                "name": "StructuredDocumentation",
                "src": "963:362:59"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 8071,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8062,
                        "name": "ElementaryTypeName",
                        "src": "1358:5:59"
                      }
                    ],
                    "id": 8063,
                    "name": "VariableDeclaration",
                    "src": "1358:20:59"
                  }
                ],
                "id": 8064,
                "name": "ParameterList",
                "src": "1357:22:59"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8065,
                "name": "ParameterList",
                "src": "1389:0:59"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8025,
                              "type": "function (bytes memory)",
                              "value": "MessageSent"
                            },
                            "id": 8066,
                            "name": "Identifier",
                            "src": "1404:11:59"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8063,
                              "type": "bytes memory",
                              "value": "message"
                            },
                            "id": 8067,
                            "name": "Identifier",
                            "src": "1416:7:59"
                          }
                        ],
                        "id": 8068,
                        "name": "FunctionCall",
                        "src": "1404:20:59"
                      }
                    ],
                    "id": 8069,
                    "name": "EmitStatement",
                    "src": "1399:25:59"
                  }
                ],
                "id": 8070,
                "name": "Block",
                "src": "1389:42:59"
              }
            ],
            "id": 8071,
            "name": "FunctionDefinition",
            "src": "1330:101:59"
          },
          {
            "attributes": {
              "body": null,
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_processMessageFromRoot",
              "overrides": null,
              "scope": 8078,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Process message received from Root Tunnel\n@dev function needs to be implemented to handle message as per requirement\nThis is called by onStateReceive function.\nSince it is called via a system call, any event will not be emitted during its execution.\n@param message bytes message that was sent from Root Tunnel"
                },
                "id": 8072,
                "name": "StructuredDocumentation",
                "src": "1437:364:59"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "message",
                      "overrides": null,
                      "scope": 8077,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 8073,
                        "name": "ElementaryTypeName",
                        "src": "1839:5:59"
                      }
                    ],
                    "id": 8074,
                    "name": "VariableDeclaration",
                    "src": "1839:20:59"
                  }
                ],
                "id": 8075,
                "name": "ParameterList",
                "src": "1838:22:59"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8076,
                "name": "ParameterList",
                "src": "1877:0:59"
              }
            ],
            "id": 8077,
            "name": "FunctionDefinition",
            "src": "1806:72:59"
          }
        ],
        "id": 8078,
        "name": "ContractDefinition",
        "src": "175:1705:59"
      }
    ],
    "id": 8079,
    "name": "SourceUnit",
    "src": "0:1881:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-21T07:45:21.982Z",
  "devdoc": {
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "onStateReceive(uint256,bytes)": {
        "details": "This method will be called by Matic chain internally. This is executed without transaction using a system call."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      }
    }
  },
  "userdoc": {
    "methods": {
      "onStateReceive(uint256,bytes)": {
        "notice": "Receive state sync from matic contracts"
      }
    },
    "notice": "Mock child tunnel contract to receive and send message from L2"
  }
}